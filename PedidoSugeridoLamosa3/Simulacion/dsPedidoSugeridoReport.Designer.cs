//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PedidoSugeridoLamosa.Simulacion {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPedidoSugeridoReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPedidoSugeridoReport : global::System.Data.DataSet {
        
        private TEMPDESIGNERDataTable tableTEMPDESIGNER;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsPedidoSugeridoReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsPedidoSugeridoReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TEMPDESIGNER"] != null)) {
                    base.Tables.Add(new TEMPDESIGNERDataTable(ds.Tables["TEMPDESIGNER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TEMPDESIGNERDataTable TEMPDESIGNER {
            get {
                return this.tableTEMPDESIGNER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsPedidoSugeridoReport cln = ((dsPedidoSugeridoReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TEMPDESIGNER"] != null)) {
                    base.Tables.Add(new TEMPDESIGNERDataTable(ds.Tables["TEMPDESIGNER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTEMPDESIGNER = ((TEMPDESIGNERDataTable)(base.Tables["TEMPDESIGNER"]));
            if ((initTable == true)) {
                if ((this.tableTEMPDESIGNER != null)) {
                    this.tableTEMPDESIGNER.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsPedidoSugeridoReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPedidoSugeridoReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTEMPDESIGNER = new TEMPDESIGNERDataTable();
            base.Tables.Add(this.tableTEMPDESIGNER);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTEMPDESIGNER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPedidoSugeridoReport ds = new dsPedidoSugeridoReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TEMPDESIGNERRowChangeEventHandler(object sender, TEMPDESIGNERRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TEMPDESIGNERDataTable : global::System.Data.TypedTableBase<TEMPDESIGNERRow> {
            
            private global::System.Data.DataColumn columnid_cia;
            
            private global::System.Data.DataColumn columnid_cliente;
            
            private global::System.Data.DataColumn columnCve_Articulo;
            
            private global::System.Data.DataColumn columnCve_Articulo_Cliente;
            
            private global::System.Data.DataColumn columnDesc_Articulo;
            
            private global::System.Data.DataColumn columnVal_Min_Cliente;
            
            private global::System.Data.DataColumn columnVal_Max_Cliente;
            
            private global::System.Data.DataColumn columnVal_Inv_Cliente;
            
            private global::System.Data.DataColumn columnVal_PedMin_Cliente;
            
            private global::System.Data.DataColumn columnVal_PedMax_Faltante;
            
            private global::System.Data.DataColumn columnVal_PedCrit_Faltante;
            
            private global::System.Data.DataColumn columnVal_Ajuste_Cliente;
            
            private global::System.Data.DataColumn columnVal_Final;
            
            private global::System.Data.DataColumn columnVal_Ped_Pendiente;
            
            private global::System.Data.DataColumn columnVal_Ped_SCred;
            
            private global::System.Data.DataColumn columnVal_Ped_PendAssignCInv;
            
            private global::System.Data.DataColumn columnVal_Ped_PendAssignSInv;
            
            private global::System.Data.DataColumn columnVal_Ped_Assign;
            
            private global::System.Data.DataColumn columnVal_Ped_InTransit;
            
            private global::System.Data.DataColumn columnCve_Zona;
            
            private global::System.Data.DataColumn columnVal_LeadTime;
            
            private global::System.Data.DataColumn columnVal_M2_Tarima;
            
            private global::System.Data.DataColumn columnVal_Inv;
            
            private global::System.Data.DataColumn columnfecha_simulacion;
            
            private global::System.Data.DataColumn columnNombre_cliente;
            
            private global::System.Data.DataColumn columnNombre_sucursal;
            
            private global::System.Data.DataColumn columnDireccion_cliente;
            
            private global::System.Data.DataColumn columnDireccion_sucursal;
            
            private global::System.Data.DataColumn columnNombre_compania;
            
            private global::System.Data.DataColumn columnDireccion_compania;
            
            private global::System.Data.DataColumn columnComentarios;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEMPDESIGNERDataTable() {
                this.TableName = "TEMPDESIGNER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TEMPDESIGNERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TEMPDESIGNERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn id_ciaColumn {
                get {
                    return this.columnid_cia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn id_clienteColumn {
                get {
                    return this.columnid_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cve_ArticuloColumn {
                get {
                    return this.columnCve_Articulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cve_Articulo_ClienteColumn {
                get {
                    return this.columnCve_Articulo_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc_ArticuloColumn {
                get {
                    return this.columnDesc_Articulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Min_ClienteColumn {
                get {
                    return this.columnVal_Min_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Max_ClienteColumn {
                get {
                    return this.columnVal_Max_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Inv_ClienteColumn {
                get {
                    return this.columnVal_Inv_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_PedMin_ClienteColumn {
                get {
                    return this.columnVal_PedMin_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_PedMax_FaltanteColumn {
                get {
                    return this.columnVal_PedMax_Faltante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_PedCrit_FaltanteColumn {
                get {
                    return this.columnVal_PedCrit_Faltante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ajuste_ClienteColumn {
                get {
                    return this.columnVal_Ajuste_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_FinalColumn {
                get {
                    return this.columnVal_Final;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ped_PendienteColumn {
                get {
                    return this.columnVal_Ped_Pendiente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ped_SCredColumn {
                get {
                    return this.columnVal_Ped_SCred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ped_PendAssignCInvColumn {
                get {
                    return this.columnVal_Ped_PendAssignCInv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ped_PendAssignSInvColumn {
                get {
                    return this.columnVal_Ped_PendAssignSInv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ped_AssignColumn {
                get {
                    return this.columnVal_Ped_Assign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_Ped_InTransitColumn {
                get {
                    return this.columnVal_Ped_InTransit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cve_ZonaColumn {
                get {
                    return this.columnCve_Zona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_LeadTimeColumn {
                get {
                    return this.columnVal_LeadTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_M2_TarimaColumn {
                get {
                    return this.columnVal_M2_Tarima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Val_InvColumn {
                get {
                    return this.columnVal_Inv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fecha_simulacionColumn {
                get {
                    return this.columnfecha_simulacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nombre_clienteColumn {
                get {
                    return this.columnNombre_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nombre_sucursalColumn {
                get {
                    return this.columnNombre_sucursal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion_clienteColumn {
                get {
                    return this.columnDireccion_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion_sucursalColumn {
                get {
                    return this.columnDireccion_sucursal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nombre_companiaColumn {
                get {
                    return this.columnNombre_compania;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion_companiaColumn {
                get {
                    return this.columnDireccion_compania;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComentariosColumn {
                get {
                    return this.columnComentarios;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEMPDESIGNERRow this[int index] {
                get {
                    return ((TEMPDESIGNERRow)(this.Rows[index]));
                }
            }
            
            public event TEMPDESIGNERRowChangeEventHandler TEMPDESIGNERRowChanging;
            
            public event TEMPDESIGNERRowChangeEventHandler TEMPDESIGNERRowChanged;
            
            public event TEMPDESIGNERRowChangeEventHandler TEMPDESIGNERRowDeleting;
            
            public event TEMPDESIGNERRowChangeEventHandler TEMPDESIGNERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTEMPDESIGNERRow(TEMPDESIGNERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEMPDESIGNERRow AddTEMPDESIGNERRow(
                        string id_cia, 
                        string id_cliente, 
                        string Cve_Articulo, 
                        string Cve_Articulo_Cliente, 
                        string Desc_Articulo, 
                        double Val_Min_Cliente, 
                        double Val_Max_Cliente, 
                        double Val_Inv_Cliente, 
                        double Val_PedMin_Cliente, 
                        int Val_PedMax_Faltante, 
                        int Val_PedCrit_Faltante, 
                        double Val_Ajuste_Cliente, 
                        int Val_Final, 
                        int Val_Ped_Pendiente, 
                        double Val_Ped_SCred, 
                        double Val_Ped_PendAssignCInv, 
                        double Val_Ped_PendAssignSInv, 
                        double Val_Ped_Assign, 
                        double Val_Ped_InTransit, 
                        string Cve_Zona, 
                        int Val_LeadTime, 
                        int Val_M2_Tarima, 
                        double Val_Inv, 
                        string fecha_simulacion, 
                        string Nombre_cliente, 
                        string Nombre_sucursal, 
                        string Direccion_cliente, 
                        string Direccion_sucursal, 
                        string Nombre_compania, 
                        string Direccion_compania, 
                        string Comentarios) {
                TEMPDESIGNERRow rowTEMPDESIGNERRow = ((TEMPDESIGNERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_cia,
                        id_cliente,
                        Cve_Articulo,
                        Cve_Articulo_Cliente,
                        Desc_Articulo,
                        Val_Min_Cliente,
                        Val_Max_Cliente,
                        Val_Inv_Cliente,
                        Val_PedMin_Cliente,
                        Val_PedMax_Faltante,
                        Val_PedCrit_Faltante,
                        Val_Ajuste_Cliente,
                        Val_Final,
                        Val_Ped_Pendiente,
                        Val_Ped_SCred,
                        Val_Ped_PendAssignCInv,
                        Val_Ped_PendAssignSInv,
                        Val_Ped_Assign,
                        Val_Ped_InTransit,
                        Cve_Zona,
                        Val_LeadTime,
                        Val_M2_Tarima,
                        Val_Inv,
                        fecha_simulacion,
                        Nombre_cliente,
                        Nombre_sucursal,
                        Direccion_cliente,
                        Direccion_sucursal,
                        Nombre_compania,
                        Direccion_compania,
                        Comentarios};
                rowTEMPDESIGNERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTEMPDESIGNERRow);
                return rowTEMPDESIGNERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TEMPDESIGNERDataTable cln = ((TEMPDESIGNERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TEMPDESIGNERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid_cia = base.Columns["id_cia"];
                this.columnid_cliente = base.Columns["id_cliente"];
                this.columnCve_Articulo = base.Columns["Cve_Articulo"];
                this.columnCve_Articulo_Cliente = base.Columns["Cve_Articulo_Cliente"];
                this.columnDesc_Articulo = base.Columns["Desc_Articulo"];
                this.columnVal_Min_Cliente = base.Columns["Val_Min_Cliente"];
                this.columnVal_Max_Cliente = base.Columns["Val_Max_Cliente"];
                this.columnVal_Inv_Cliente = base.Columns["Val_Inv_Cliente"];
                this.columnVal_PedMin_Cliente = base.Columns["Val_PedMin_Cliente"];
                this.columnVal_PedMax_Faltante = base.Columns["Val_PedMax_Faltante"];
                this.columnVal_PedCrit_Faltante = base.Columns["Val_PedCrit_Faltante"];
                this.columnVal_Ajuste_Cliente = base.Columns["Val_Ajuste_Cliente"];
                this.columnVal_Final = base.Columns["Val_Final"];
                this.columnVal_Ped_Pendiente = base.Columns["Val_Ped_Pendiente"];
                this.columnVal_Ped_SCred = base.Columns["Val_Ped_SCred"];
                this.columnVal_Ped_PendAssignCInv = base.Columns["Val_Ped_PendAssignCInv"];
                this.columnVal_Ped_PendAssignSInv = base.Columns["Val_Ped_PendAssignSInv"];
                this.columnVal_Ped_Assign = base.Columns["Val_Ped_Assign"];
                this.columnVal_Ped_InTransit = base.Columns["Val_Ped_InTransit"];
                this.columnCve_Zona = base.Columns["Cve_Zona"];
                this.columnVal_LeadTime = base.Columns["Val_LeadTime"];
                this.columnVal_M2_Tarima = base.Columns["Val_M2_Tarima"];
                this.columnVal_Inv = base.Columns["Val_Inv"];
                this.columnfecha_simulacion = base.Columns["fecha_simulacion"];
                this.columnNombre_cliente = base.Columns["Nombre_cliente"];
                this.columnNombre_sucursal = base.Columns["Nombre_sucursal"];
                this.columnDireccion_cliente = base.Columns["Direccion_cliente"];
                this.columnDireccion_sucursal = base.Columns["Direccion_sucursal"];
                this.columnNombre_compania = base.Columns["Nombre_compania"];
                this.columnDireccion_compania = base.Columns["Direccion_compania"];
                this.columnComentarios = base.Columns["Comentarios"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid_cia = new global::System.Data.DataColumn("id_cia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_cia);
                this.columnid_cliente = new global::System.Data.DataColumn("id_cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_cliente);
                this.columnCve_Articulo = new global::System.Data.DataColumn("Cve_Articulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCve_Articulo);
                this.columnCve_Articulo_Cliente = new global::System.Data.DataColumn("Cve_Articulo_Cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCve_Articulo_Cliente);
                this.columnDesc_Articulo = new global::System.Data.DataColumn("Desc_Articulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc_Articulo);
                this.columnVal_Min_Cliente = new global::System.Data.DataColumn("Val_Min_Cliente", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Min_Cliente);
                this.columnVal_Max_Cliente = new global::System.Data.DataColumn("Val_Max_Cliente", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Max_Cliente);
                this.columnVal_Inv_Cliente = new global::System.Data.DataColumn("Val_Inv_Cliente", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Inv_Cliente);
                this.columnVal_PedMin_Cliente = new global::System.Data.DataColumn("Val_PedMin_Cliente", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_PedMin_Cliente);
                this.columnVal_PedMax_Faltante = new global::System.Data.DataColumn("Val_PedMax_Faltante", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_PedMax_Faltante);
                this.columnVal_PedCrit_Faltante = new global::System.Data.DataColumn("Val_PedCrit_Faltante", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_PedCrit_Faltante);
                this.columnVal_Ajuste_Cliente = new global::System.Data.DataColumn("Val_Ajuste_Cliente", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ajuste_Cliente);
                this.columnVal_Final = new global::System.Data.DataColumn("Val_Final", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Final);
                this.columnVal_Ped_Pendiente = new global::System.Data.DataColumn("Val_Ped_Pendiente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ped_Pendiente);
                this.columnVal_Ped_SCred = new global::System.Data.DataColumn("Val_Ped_SCred", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ped_SCred);
                this.columnVal_Ped_PendAssignCInv = new global::System.Data.DataColumn("Val_Ped_PendAssignCInv", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ped_PendAssignCInv);
                this.columnVal_Ped_PendAssignSInv = new global::System.Data.DataColumn("Val_Ped_PendAssignSInv", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ped_PendAssignSInv);
                this.columnVal_Ped_Assign = new global::System.Data.DataColumn("Val_Ped_Assign", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ped_Assign);
                this.columnVal_Ped_InTransit = new global::System.Data.DataColumn("Val_Ped_InTransit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Ped_InTransit);
                this.columnCve_Zona = new global::System.Data.DataColumn("Cve_Zona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCve_Zona);
                this.columnVal_LeadTime = new global::System.Data.DataColumn("Val_LeadTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_LeadTime);
                this.columnVal_M2_Tarima = new global::System.Data.DataColumn("Val_M2_Tarima", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_M2_Tarima);
                this.columnVal_Inv = new global::System.Data.DataColumn("Val_Inv", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVal_Inv);
                this.columnfecha_simulacion = new global::System.Data.DataColumn("fecha_simulacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha_simulacion);
                this.columnNombre_cliente = new global::System.Data.DataColumn("Nombre_cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_cliente);
                this.columnNombre_sucursal = new global::System.Data.DataColumn("Nombre_sucursal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_sucursal);
                this.columnDireccion_cliente = new global::System.Data.DataColumn("Direccion_cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion_cliente);
                this.columnDireccion_sucursal = new global::System.Data.DataColumn("Direccion_sucursal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion_sucursal);
                this.columnNombre_compania = new global::System.Data.DataColumn("Nombre_compania", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_compania);
                this.columnDireccion_compania = new global::System.Data.DataColumn("Direccion_compania", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion_compania);
                this.columnComentarios = new global::System.Data.DataColumn("Comentarios", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComentarios);
                this.columnid_cia.AllowDBNull = false;
                this.columnid_cia.MaxLength = 6;
                this.columnid_cliente.AllowDBNull = false;
                this.columnid_cliente.MaxLength = 30;
                this.columnCve_Articulo.AllowDBNull = false;
                this.columnCve_Articulo.MaxLength = 30;
                this.columnCve_Articulo_Cliente.AllowDBNull = false;
                this.columnCve_Articulo_Cliente.MaxLength = 30;
                this.columnDesc_Articulo.MaxLength = 50;
                this.columnVal_PedMax_Faltante.AllowDBNull = false;
                this.columnVal_PedCrit_Faltante.AllowDBNull = false;
                this.columnVal_Final.AllowDBNull = false;
                this.columnVal_Ped_Pendiente.AllowDBNull = false;
                this.columnVal_Ped_SCred.AllowDBNull = false;
                this.columnVal_Ped_PendAssignCInv.AllowDBNull = false;
                this.columnVal_Ped_PendAssignSInv.AllowDBNull = false;
                this.columnVal_Ped_Assign.AllowDBNull = false;
                this.columnVal_Ped_InTransit.AllowDBNull = false;
                this.columnCve_Zona.AllowDBNull = false;
                this.columnCve_Zona.MaxLength = 20;
                this.columnVal_LeadTime.AllowDBNull = false;
                this.columnVal_M2_Tarima.AllowDBNull = false;
                this.columnVal_Inv.AllowDBNull = false;
                this.columnfecha_simulacion.MaxLength = 20;
                this.columnNombre_cliente.MaxLength = 100;
                this.columnNombre_sucursal.MaxLength = 100;
                this.columnDireccion_cliente.MaxLength = 100;
                this.columnDireccion_sucursal.MaxLength = 100;
                this.columnNombre_compania.MaxLength = 100;
                this.columnDireccion_compania.MaxLength = 100;
                this.columnComentarios.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEMPDESIGNERRow NewTEMPDESIGNERRow() {
                return ((TEMPDESIGNERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TEMPDESIGNERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TEMPDESIGNERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TEMPDESIGNERRowChanged != null)) {
                    this.TEMPDESIGNERRowChanged(this, new TEMPDESIGNERRowChangeEvent(((TEMPDESIGNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TEMPDESIGNERRowChanging != null)) {
                    this.TEMPDESIGNERRowChanging(this, new TEMPDESIGNERRowChangeEvent(((TEMPDESIGNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TEMPDESIGNERRowDeleted != null)) {
                    this.TEMPDESIGNERRowDeleted(this, new TEMPDESIGNERRowChangeEvent(((TEMPDESIGNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TEMPDESIGNERRowDeleting != null)) {
                    this.TEMPDESIGNERRowDeleting(this, new TEMPDESIGNERRowChangeEvent(((TEMPDESIGNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTEMPDESIGNERRow(TEMPDESIGNERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPedidoSugeridoReport ds = new dsPedidoSugeridoReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TEMPDESIGNERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TEMPDESIGNERRow : global::System.Data.DataRow {
            
            private TEMPDESIGNERDataTable tableTEMPDESIGNER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TEMPDESIGNERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTEMPDESIGNER = ((TEMPDESIGNERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id_cia {
                get {
                    return ((string)(this[this.tableTEMPDESIGNER.id_ciaColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.id_ciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id_cliente {
                get {
                    return ((string)(this[this.tableTEMPDESIGNER.id_clienteColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.id_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cve_Articulo {
                get {
                    return ((string)(this[this.tableTEMPDESIGNER.Cve_ArticuloColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Cve_ArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cve_Articulo_Cliente {
                get {
                    return ((string)(this[this.tableTEMPDESIGNER.Cve_Articulo_ClienteColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Cve_Articulo_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc_Articulo {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Desc_ArticuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc_Articulo\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Desc_ArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Min_Cliente {
                get {
                    try {
                        return ((double)(this[this.tableTEMPDESIGNER.Val_Min_ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Val_Min_Cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Min_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Max_Cliente {
                get {
                    try {
                        return ((double)(this[this.tableTEMPDESIGNER.Val_Max_ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Val_Max_Cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Max_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Inv_Cliente {
                get {
                    try {
                        return ((double)(this[this.tableTEMPDESIGNER.Val_Inv_ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Val_Inv_Cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Inv_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_PedMin_Cliente {
                get {
                    try {
                        return ((double)(this[this.tableTEMPDESIGNER.Val_PedMin_ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Val_PedMin_Cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_PedMin_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Val_PedMax_Faltante {
                get {
                    return ((int)(this[this.tableTEMPDESIGNER.Val_PedMax_FaltanteColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_PedMax_FaltanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Val_PedCrit_Faltante {
                get {
                    return ((int)(this[this.tableTEMPDESIGNER.Val_PedCrit_FaltanteColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_PedCrit_FaltanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Ajuste_Cliente {
                get {
                    try {
                        return ((double)(this[this.tableTEMPDESIGNER.Val_Ajuste_ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Val_Ajuste_Cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ajuste_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Val_Final {
                get {
                    return ((int)(this[this.tableTEMPDESIGNER.Val_FinalColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_FinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Val_Ped_Pendiente {
                get {
                    return ((int)(this[this.tableTEMPDESIGNER.Val_Ped_PendienteColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ped_PendienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Ped_SCred {
                get {
                    return ((double)(this[this.tableTEMPDESIGNER.Val_Ped_SCredColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ped_SCredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Ped_PendAssignCInv {
                get {
                    return ((double)(this[this.tableTEMPDESIGNER.Val_Ped_PendAssignCInvColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ped_PendAssignCInvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Ped_PendAssignSInv {
                get {
                    return ((double)(this[this.tableTEMPDESIGNER.Val_Ped_PendAssignSInvColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ped_PendAssignSInvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Ped_Assign {
                get {
                    return ((double)(this[this.tableTEMPDESIGNER.Val_Ped_AssignColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ped_AssignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Ped_InTransit {
                get {
                    return ((double)(this[this.tableTEMPDESIGNER.Val_Ped_InTransitColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_Ped_InTransitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cve_Zona {
                get {
                    return ((string)(this[this.tableTEMPDESIGNER.Cve_ZonaColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Cve_ZonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Val_LeadTime {
                get {
                    return ((int)(this[this.tableTEMPDESIGNER.Val_LeadTimeColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_LeadTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Val_M2_Tarima {
                get {
                    return ((int)(this[this.tableTEMPDESIGNER.Val_M2_TarimaColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_M2_TarimaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Val_Inv {
                get {
                    return ((double)(this[this.tableTEMPDESIGNER.Val_InvColumn]));
                }
                set {
                    this[this.tableTEMPDESIGNER.Val_InvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fecha_simulacion {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.fecha_simulacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha_simulacion\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.fecha_simulacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre_cliente {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Nombre_clienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre_cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Nombre_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre_sucursal {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Nombre_sucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre_sucursal\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Nombre_sucursalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion_cliente {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Direccion_clienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direccion_cliente\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Direccion_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion_sucursal {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Direccion_sucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direccion_sucursal\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Direccion_sucursalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre_compania {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Nombre_companiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre_compania\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Nombre_companiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion_compania {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.Direccion_companiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direccion_compania\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.Direccion_companiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comentarios {
                get {
                    try {
                        return ((string)(this[this.tableTEMPDESIGNER.ComentariosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comentarios\' in table \'TEMPDESIGNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMPDESIGNER.ComentariosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc_ArticuloNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Desc_ArticuloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc_ArticuloNull() {
                this[this.tableTEMPDESIGNER.Desc_ArticuloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVal_Min_ClienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Val_Min_ClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVal_Min_ClienteNull() {
                this[this.tableTEMPDESIGNER.Val_Min_ClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVal_Max_ClienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Val_Max_ClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVal_Max_ClienteNull() {
                this[this.tableTEMPDESIGNER.Val_Max_ClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVal_Inv_ClienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Val_Inv_ClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVal_Inv_ClienteNull() {
                this[this.tableTEMPDESIGNER.Val_Inv_ClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVal_PedMin_ClienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Val_PedMin_ClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVal_PedMin_ClienteNull() {
                this[this.tableTEMPDESIGNER.Val_PedMin_ClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVal_Ajuste_ClienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Val_Ajuste_ClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVal_Ajuste_ClienteNull() {
                this[this.tableTEMPDESIGNER.Val_Ajuste_ClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfecha_simulacionNull() {
                return this.IsNull(this.tableTEMPDESIGNER.fecha_simulacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfecha_simulacionNull() {
                this[this.tableTEMPDESIGNER.fecha_simulacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombre_clienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Nombre_clienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombre_clienteNull() {
                this[this.tableTEMPDESIGNER.Nombre_clienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombre_sucursalNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Nombre_sucursalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombre_sucursalNull() {
                this[this.tableTEMPDESIGNER.Nombre_sucursalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion_clienteNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Direccion_clienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion_clienteNull() {
                this[this.tableTEMPDESIGNER.Direccion_clienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion_sucursalNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Direccion_sucursalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion_sucursalNull() {
                this[this.tableTEMPDESIGNER.Direccion_sucursalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombre_companiaNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Nombre_companiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombre_companiaNull() {
                this[this.tableTEMPDESIGNER.Nombre_companiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion_companiaNull() {
                return this.IsNull(this.tableTEMPDESIGNER.Direccion_companiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion_companiaNull() {
                this[this.tableTEMPDESIGNER.Direccion_companiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComentariosNull() {
                return this.IsNull(this.tableTEMPDESIGNER.ComentariosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComentariosNull() {
                this[this.tableTEMPDESIGNER.ComentariosColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TEMPDESIGNERRowChangeEvent : global::System.EventArgs {
            
            private TEMPDESIGNERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEMPDESIGNERRowChangeEvent(TEMPDESIGNERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEMPDESIGNERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PedidoSugeridoLamosa.Simulacion.dsPedidoSugeridoReportTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TEMPDESIGNERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TEMPDESIGNERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TEMPDESIGNER";
            tableMapping.ColumnMappings.Add("id_cia", "id_cia");
            tableMapping.ColumnMappings.Add("id_cliente", "id_cliente");
            tableMapping.ColumnMappings.Add("Cve_Articulo", "Cve_Articulo");
            tableMapping.ColumnMappings.Add("Cve_Articulo_Cliente", "Cve_Articulo_Cliente");
            tableMapping.ColumnMappings.Add("Desc_Articulo", "Desc_Articulo");
            tableMapping.ColumnMappings.Add("Val_Min_Cliente", "Val_Min_Cliente");
            tableMapping.ColumnMappings.Add("Val_Max_Cliente", "Val_Max_Cliente");
            tableMapping.ColumnMappings.Add("Val_Inv_Cliente", "Val_Inv_Cliente");
            tableMapping.ColumnMappings.Add("Val_PedMin_Cliente", "Val_PedMin_Cliente");
            tableMapping.ColumnMappings.Add("Val_PedMax_Faltante", "Val_PedMax_Faltante");
            tableMapping.ColumnMappings.Add("Val_PedCrit_Faltante", "Val_PedCrit_Faltante");
            tableMapping.ColumnMappings.Add("Val_Ajuste_Cliente", "Val_Ajuste_Cliente");
            tableMapping.ColumnMappings.Add("Val_Final", "Val_Final");
            tableMapping.ColumnMappings.Add("Val_Ped_Pendiente", "Val_Ped_Pendiente");
            tableMapping.ColumnMappings.Add("Val_Ped_SCred", "Val_Ped_SCred");
            tableMapping.ColumnMappings.Add("Val_Ped_PendAssignCInv", "Val_Ped_PendAssignCInv");
            tableMapping.ColumnMappings.Add("Val_Ped_PendAssignSInv", "Val_Ped_PendAssignSInv");
            tableMapping.ColumnMappings.Add("Val_Ped_Assign", "Val_Ped_Assign");
            tableMapping.ColumnMappings.Add("Val_Ped_InTransit", "Val_Ped_InTransit");
            tableMapping.ColumnMappings.Add("Cve_Zona", "Cve_Zona");
            tableMapping.ColumnMappings.Add("Val_LeadTime", "Val_LeadTime");
            tableMapping.ColumnMappings.Add("Val_M2_Tarima", "Val_M2_Tarima");
            tableMapping.ColumnMappings.Add("Val_Inv", "Val_Inv");
            tableMapping.ColumnMappings.Add("fecha_simulacion", "fecha_simulacion");
            tableMapping.ColumnMappings.Add("Nombre_cliente", "Nombre_cliente");
            tableMapping.ColumnMappings.Add("Nombre_sucursal", "Nombre_sucursal");
            tableMapping.ColumnMappings.Add("Direccion_cliente", "Direccion_cliente");
            tableMapping.ColumnMappings.Add("Direccion_sucursal", "Direccion_sucursal");
            tableMapping.ColumnMappings.Add("Nombre_compania", "Nombre_compania");
            tableMapping.ColumnMappings.Add("Direccion_compania", "Direccion_compania");
            tableMapping.ColumnMappings.Add("Comentarios", "Comentarios");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TEMPDESIGNER] ([id_cia], [id_cliente], [Cve_Articulo], [Cve_Articulo_Cliente], [Desc_Articulo], [Val_Min_Cliente], [Val_Max_Cliente], [Val_Inv_Cliente], [Val_PedMin_Cliente], [Val_PedMax_Faltante], [Val_PedCrit_Faltante], [Val_Ajuste_Cliente], [Val_Final], [Val_Ped_Pendiente], [Val_Ped_SCred], [Val_Ped_PendAssignCInv], [Val_Ped_PendAssignSInv], [Val_Ped_Assign], [Val_Ped_InTransit], [Cve_Zona], [Val_LeadTime], [Val_M2_Tarima], [Val_Inv], [fecha_simulacion], [Nombre_cliente], [Nombre_sucursal], [Direccion_cliente], [Direccion_sucursal], [Nombre_compania], [Direccion_compania]) VALUES (@id_cia, @id_cliente, @Cve_Articulo, @Cve_Articulo_Cliente, @Desc_Articulo, @Val_Min_Cliente, @Val_Max_Cliente, @Val_Inv_Cliente, @Val_PedMin_Cliente, @Val_PedMax_Faltante, @Val_PedCrit_Faltante, @Val_Ajuste_Cliente, @Val_Final, @Val_Ped_Pendiente, @Val_Ped_SCred, @Val_Ped_PendAssignCInv, @Val_Ped_PendAssignSInv, @Val_Ped_Assign, @Val_Ped_InTransit, @Cve_Zona, @Val_LeadTime, @Val_M2_Tarima, @Val_Inv, @fecha_simulacion, @Nombre_cliente, @Nombre_sucursal, @Direccion_cliente, @Direccion_sucursal, @Nombre_compania, @Direccion_compania)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_cia", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_cia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_cliente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cve_Articulo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cve_Articulo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cve_Articulo_Cliente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cve_Articulo_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Desc_Articulo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Desc_Articulo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Min_Cliente", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Min_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Max_Cliente", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Max_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Inv_Cliente", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Inv_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_PedMin_Cliente", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_PedMin_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_PedMax_Faltante", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_PedMax_Faltante", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_PedCrit_Faltante", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_PedCrit_Faltante", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ajuste_Cliente", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ajuste_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Final", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Final", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ped_Pendiente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ped_Pendiente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ped_SCred", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ped_SCred", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ped_PendAssignCInv", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ped_PendAssignCInv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ped_PendAssignSInv", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ped_PendAssignSInv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ped_Assign", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ped_Assign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Ped_InTransit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Ped_InTransit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cve_Zona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cve_Zona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_LeadTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_LeadTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_M2_Tarima", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_M2_Tarima", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Val_Inv", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Val_Inv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha_simulacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fecha_simulacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_cliente", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_sucursal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_sucursal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Direccion_cliente", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Direccion_sucursal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion_sucursal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_compania", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_compania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Direccion_compania", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion_compania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["comvicsaConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     id_cia, id_cliente, Cve_Articulo, Cve_Articulo_Cliente, Desc_Articulo, Val_Min_Cliente, Val_Max_Cliente, Val_Inv_Cliente, Val_PedMin_Cliente, 
                      Val_PedMax_Faltante, Val_PedCrit_Faltante, Val_Ajuste_Cliente, Val_Final, Val_Ped_Pendiente, Val_Ped_SCred, Val_Ped_PendAssignCInv, 
                      Val_Ped_PendAssignSInv, Val_Ped_Assign, Val_Ped_InTransit, Cve_Zona, Val_LeadTime, Val_M2_Tarima, Val_Inv, fecha_simulacion, Nombre_cliente,
                       Nombre_sucursal, Direccion_cliente, Direccion_sucursal, Nombre_compania, Direccion_compania
FROM         TEMPDESIGNER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPedidoSugeridoReport.TEMPDESIGNERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPedidoSugeridoReport.TEMPDESIGNERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPedidoSugeridoReport.TEMPDESIGNERDataTable dataTable = new dsPedidoSugeridoReport.TEMPDESIGNERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPedidoSugeridoReport.TEMPDESIGNERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPedidoSugeridoReport dataSet) {
            return this.Adapter.Update(dataSet, "TEMPDESIGNER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string id_cia, 
                    string id_cliente, 
                    string Cve_Articulo, 
                    string Cve_Articulo_Cliente, 
                    string Desc_Articulo, 
                    global::System.Nullable<double> Val_Min_Cliente, 
                    global::System.Nullable<double> Val_Max_Cliente, 
                    global::System.Nullable<double> Val_Inv_Cliente, 
                    global::System.Nullable<double> Val_PedMin_Cliente, 
                    int Val_PedMax_Faltante, 
                    int Val_PedCrit_Faltante, 
                    global::System.Nullable<double> Val_Ajuste_Cliente, 
                    int Val_Final, 
                    int Val_Ped_Pendiente, 
                    double Val_Ped_SCred, 
                    double Val_Ped_PendAssignCInv, 
                    double Val_Ped_PendAssignSInv, 
                    double Val_Ped_Assign, 
                    double Val_Ped_InTransit, 
                    string Cve_Zona, 
                    int Val_LeadTime, 
                    int Val_M2_Tarima, 
                    double Val_Inv, 
                    string fecha_simulacion, 
                    string Nombre_cliente, 
                    string Nombre_sucursal, 
                    string Direccion_cliente, 
                    string Direccion_sucursal, 
                    string Nombre_compania, 
                    string Direccion_compania) {
            if ((id_cia == null)) {
                throw new global::System.ArgumentNullException("id_cia");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(id_cia));
            }
            if ((id_cliente == null)) {
                throw new global::System.ArgumentNullException("id_cliente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(id_cliente));
            }
            if ((Cve_Articulo == null)) {
                throw new global::System.ArgumentNullException("Cve_Articulo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Cve_Articulo));
            }
            if ((Cve_Articulo_Cliente == null)) {
                throw new global::System.ArgumentNullException("Cve_Articulo_Cliente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Cve_Articulo_Cliente));
            }
            if ((Desc_Articulo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Desc_Articulo));
            }
            if ((Val_Min_Cliente.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Val_Min_Cliente.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Val_Max_Cliente.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Val_Max_Cliente.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Val_Inv_Cliente.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Val_Inv_Cliente.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Val_PedMin_Cliente.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Val_PedMin_Cliente.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Val_PedMax_Faltante));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Val_PedCrit_Faltante));
            if ((Val_Ajuste_Cliente.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Val_Ajuste_Cliente.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Val_Final));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Val_Ped_Pendiente));
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Val_Ped_SCred));
            this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Val_Ped_PendAssignCInv));
            this.Adapter.InsertCommand.Parameters[16].Value = ((double)(Val_Ped_PendAssignSInv));
            this.Adapter.InsertCommand.Parameters[17].Value = ((double)(Val_Ped_Assign));
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Val_Ped_InTransit));
            if ((Cve_Zona == null)) {
                throw new global::System.ArgumentNullException("Cve_Zona");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Cve_Zona));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Val_LeadTime));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Val_M2_Tarima));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(Val_Inv));
            if ((fecha_simulacion == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(fecha_simulacion));
            }
            if ((Nombre_cliente == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Nombre_cliente));
            }
            if ((Nombre_sucursal == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Nombre_sucursal));
            }
            if ((Direccion_cliente == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Direccion_cliente));
            }
            if ((Direccion_sucursal == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Direccion_sucursal));
            }
            if ((Nombre_compania == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Nombre_compania));
            }
            if ((Direccion_compania == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Direccion_compania));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TEMPDESIGNERTableAdapter _tEMPDESIGNERTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TEMPDESIGNERTableAdapter TEMPDESIGNERTableAdapter {
            get {
                return this._tEMPDESIGNERTableAdapter;
            }
            set {
                this._tEMPDESIGNERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tEMPDESIGNERTableAdapter != null) 
                            && (this._tEMPDESIGNERTableAdapter.Connection != null))) {
                    return this._tEMPDESIGNERTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tEMPDESIGNERTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsPedidoSugeridoReport dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tEMPDESIGNERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TEMPDESIGNER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tEMPDESIGNERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsPedidoSugeridoReport dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tEMPDESIGNERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TEMPDESIGNER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tEMPDESIGNERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsPedidoSugeridoReport dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tEMPDESIGNERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TEMPDESIGNER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tEMPDESIGNERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsPedidoSugeridoReport dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tEMPDESIGNERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tEMPDESIGNERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tEMPDESIGNERTableAdapter != null)) {
                    revertConnections.Add(this._tEMPDESIGNERTableAdapter, this._tEMPDESIGNERTableAdapter.Connection);
                    this._tEMPDESIGNERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tEMPDESIGNERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tEMPDESIGNERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tEMPDESIGNERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tEMPDESIGNERTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tEMPDESIGNERTableAdapter != null)) {
                    this._tEMPDESIGNERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tEMPDESIGNERTableAdapter]));
                    this._tEMPDESIGNERTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591